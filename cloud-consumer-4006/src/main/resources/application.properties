server.port=4006
server.servlet.context-path=/${spring.application.name}
#sentinel
spring.cloud.sentinel.transport.dashboard=127.0.0.1:8858
spring.cloud.sentinel.transport.clientIp=127.0.0.1
#spring.cloud.sentinel.transport.port=8719 不用配置，自动分配
spring.cloud.sentinel.datasource.flow.nacos.server-addr=127.0.0.1:8848
spring.cloud.sentinel.datasource.flow.nacos.dataId=${spring.application.name}-flow-rules
spring.cloud.sentinel.datasource.flow.nacos.groupId=SENTINEL_GROUP
spring.cloud.sentinel.datasource.flow.nacos.data-type=json
spring.cloud.sentinel.datasource.flow.nacos.rule-type=flow

#seata
seata.enabled=true
seata.tx-service-group=my_zdl_group
seata.application-id=${spring.application.name}
seata.enable-auto-data-source-proxy=true
seata.service.vgroup-mapping.my_zdl_group=default
seata.config.type=nacos
seata.config.nacos.namespace=d1d553f0-537b-4077-83fb-25d36ebad543
seata.config.nacos.server-addr=127.0.0.1:8848
seata.config.nacos.group=SEATA_GROUP
seata.config.nacos.username=nacos
seata.config.nacos.password=nacos
seata.registry.type=nacos
seata.registry.nacos.application=seata-server
seata.registry.nacos.server-addr=127.0.0.1:8848
seata.registry.nacos.group=SEATA_GROUP
seata.registry.nacos.namespace=d1d553f0-537b-4077-83fb-25d36ebad543
seata.registry.nacos.username=nacos
seata.registry.nacos.password=nacos
seata.registry.nacos.cluster=default

#zipkin 配置
#zipkin server的请求地址
spring.zipkin.base-url=http://127.0.0.1:5000/
#让nacos把它当成一个URL，而不要当做服务名
spring.zipkin.discovery-client-enabled=false
#采样的百分比 生产环境尽量小，避免影响服务
spring.sleuth.sampler.probability=1.0